///////////////////////////////////////////////////////////////////////
                  PREPARACION: Instalar REACT ROUTER DOM
                        "npm i react-router-dom"
                            (ya instalado)
///////////////////////////////////////////////////////////////////////
//                      1_Configurar Rutas en APP.js:                //
-----------------------------------------------------------------------
import {BrowserRouter, Routes, Route} from "react-router-dom"

const App = () => {
  return (
    <BrowserRouter>
      <Navbar />
      <Routes>
        <Route path='/' element={<ItemListContainer />} />
        <Route path='categoria/:categoria' element={<ItemListContainer />} />
        <Route path="item/:id" element={<ItemDetailContainer />} />
        <Route path="*" element={<Link to="/"><Loader /></Link>} />
      </Routes>
    </BrowserRouter>
  );
};

///////////////////////////////////////////////////////////////////////
//                    2_Configurar Rutas en Navbar                  //
-----------------------------------------------------------------------
import { Link } from "react-router-dom";

const Navbar = () => {
  return (
    <nav className="navbar">
      <Link to="/" className="logo-container">        
          <img src={logo} alt="logo" className="logo"/>
          <h2>Tienda React</h2>        
      </Link>
      <div className="link-container"> 
        <ul>
          <Link to="categoria/componente" className="link">Componentes</Link>
          <Link to="categoria/hook" className="link">Hooks</Link>
          <CartWidget />
        </ul>
       
      </div>
    </nav>
  );
};

////////////////////////////////////////////////////////////////////////////
//                        3_Configurar Boton de Item                     //
---------------------------------------------------------------------------
const Item = ({nombre, imgItem, extra, id}) => {

  return (
    <div className="card-container">
      <div className="img-container">
        <img src={imgItem} alt={nombre} className="img-item"/>
      </div>

      <h3 className="">{nombre}</h3>
      {extra && <span>{extra}</span> }
      <Link to={`/item/${id}`}><button>DETALLE</button></Link>
    </div>
  );
};

export default Item;

//////////////////////////////////////////////////////////////////////////////
//            4_Configurar llamada por id en ItemDetailContainer           //
-----------------------------------------------------------------------------
const ItemDetailContainer = () => {
  const [item, setItem] = useState({});

  const { id } = useParams();

  const traerItemPorId = () => {
    return new Promise(resolve => {
      setTimeout(() => {
        resolve(lista.find(obj => obj.id === id));
      }, 500);
    });
  };

  useEffect(() => {
    traerItemPorId().then(respuesta => {
      setItem(respuesta);
    });
  },[id]);

  return <ItemDetail item={item} />;
};
//////////////////////////////////////////////////////////////////////////////
//        5_Configurar filtrado por categoria en ItemListContainer          // 
-----------------------------------------------------------------------------

const ItemListContainer = () => {
  const [items, setItems] = useState([])
  const {categoria} = useParams()
  
  const traerItems = () => {
    return new Promise((resolve)=>{
      setTimeout(()=>{
        resolve(categoria ? lista.filter(obj => obj.categoria === categoria) : lista);
      }, 1000)
    }) 
  }

  useEffect(()=>{
    traerItems().then(res =>{
      setItems(res)
    })
  },[categoria])


  return (
  <ItemList items={items} />
  )
}

/////////////////////////////////////////////////////////////////////////////////
                              EXTRA: Loader
---------------------------------------------------------------------------------
//                       _en ItemListContainer                                 //
---------------------------------------------------------------------------------
const ItemListContainer = () => {
  const [items, setItems] = useState([]);
  const [cargando, setCargando] = useState(true);
  const { categoria } = useParams();

  const traerItems = () => {
    return new Promise(resolve => {
      setCargando(true)
      setTimeout(() => {
        resolve(
          categoria ? lista.filter(obj => obj.categoria === categoria) : lista
        );
      }, 1000);
    });
  };

  useEffect(
    () => {
      traerItems().then(res => {
        setItems(res);
        setCargando(false);
      });
    },
    [categoria]
  );

  return(<>{cargando ? <Loader /> : <ItemList items={items} />}</>)
  
};

export default ItemListContainer;

-------------------------------------------------------------------------------------
//                       _en ItemDetailContainer                                    //
-------------------------------------------------------------------------------------

const [item, setItem] = useState({});
  const [cargando, setCargando] = useState(true)

  const { id } = useParams();

  const traerItemPorId = () => {
    return new Promise(resolve => {
      setTimeout(() => {
        resolve(lista.find(obj => obj.id === id));
      }, 500);
    });
  };

  useEffect(() => {
    traerItemPorId().then(respuesta => {
      setItem(respuesta);
      setCargando(false)
    });
  },[id]);

  return(<>{cargando ? <Loader /> : <ItemDetail item={item} /> }</>)

  ///////////////////////////////////////////////////////////////////////////////////////
                                  Extra 2 NAVLINK
  --------------------------------------------------------------------------------------

  ----------------------------------------- CSS: -----------------------------------------

  .link-activo{
    margin: 0 10px;
    color: var(--texto);
    border: 1px solid var(--otro);
    padding: 4px 8px;
    border-radius: 10px;
    box-shadow: 1px 1px 10px rgb(34, 34, 34);
  }

------------------------------------------------- CODE ---------------------------------------

<NavLink to="/categoria/componente" className={({isActive})=>isActive? "link-activo" : "link"}>Componentes</NavLink>
<NavLink to="/categoria/hook" className={({isActive})=>isActive? "link-activo" : "link"}>Hooks</NavLink>

///////////////////////////////////////////////////////////////////////////////////////////////